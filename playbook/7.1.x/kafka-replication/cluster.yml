---
clusters:
  - name: Kafka Primary
    services: [CRUISE_CONTROL, KAFKA, SCHEMAREGISTRY, STREAMS_MESSAGING_MANAGER, STREAMS_REPLICATION_MANAGER, ZOOKEEPER]
    repositories:
        - https://archive.cloudera.com/p/cdh7/7.1.3.0/parcels/
    configs:
      STREAMS_REPLICATION_MANAGER:
        SERVICEWIDE:
          clusters: "primary, secondary"
          streams.replication.manager.config: "primary.bootstrap.servers={% for host in groups['primary_broker_nodes'] %}{{ hostvars[host].inventory_hostname }}:9092,{% endfor %}|secondary.bootstrap.servers={% for host in groups['secondary_broker_nodes'] %}{{ hostvars[host].inventory_hostname }}:9092,{% endfor %}|primary->secondary.enabled=true|secondary->primary.enabled=true|primary.security.protocol=PLAINTEXT|secondary.security.protocol=PLAINTEXT"
        STREAMS_REPLICATION_MANAGER_SERVICE:
          streams.replication.manager.service.target.cluster: "primary"
        STREAMS_REPLICATION_MANAGER_DRIVER:
          streams.replication.manager.driver.target.cluster: "primary"
      STREAMS_MESSAGING_MANAGER:
        STREAMS_MESSAGING_MANAGER_SERVER:
          streams.replication.manager.configure: true
          streams.replication.manager.host: "{{ hostvars[groups['primary_broker_nodes'][0]].inventory_hostname }}"
      ZOOKEEPER:
        SERVICEWIDE:
          zookeeper_datadir_autocreate: true
    host_templates:
      Master11:
        CRUISE_CONTROL: [CRUISE_CONTROL_SERVER]
        SCHEMAREGISTRY: [SCHEMA_REGISTRY_SERVER]
        STREAMS_MESSAGING_MANAGER: [STREAMS_MESSAGING_MANAGER_UI, STREAMS_MESSAGING_MANAGER_SERVER]
      Broker11:
        KAFKA: [KAFKA_BROKER]
        SCHEMAREGISTRY: [GATEWAY]
        STREAMS_REPLICATION_MANAGER: [STREAMS_REPLICATION_MANAGER_DRIVER, STREAMS_REPLICATION_MANAGER_SERVICE]
        ZOOKEEPER: [SERVER]
      Broker12:
        KAFKA: [KAFKA_BROKER]
        SCHEMAREGISTRY: [GATEWAY]
        STREAMS_REPLICATION_MANAGER: [STREAMS_REPLICATION_MANAGER_DRIVER]
        ZOOKEEPER: [SERVER]

  - name: Kafka Secondary
    services: [CRUISE_CONTROL, KAFKA, SCHEMAREGISTRY, STREAMS_MESSAGING_MANAGER, STREAMS_REPLICATION_MANAGER, ZOOKEEPER]
    repositories:
        - https://archive.cloudera.com/p/cdh7/7.1.3.0/parcels/
    configs:
      STREAMS_REPLICATION_MANAGER:
        SERVICEWIDE:
          clusters: "primary, secondary"
          streams.replication.manager.config: "primary.bootstrap.servers={% for host in groups['primary_broker_nodes'] %}{{ hostvars[host].inventory_hostname }}:9092,{% endfor %}|secondary.bootstrap.servers={% for host in groups['secondary_broker_nodes'] %}{{ hostvars[host].inventory_hostname }}:9092,{% endfor %}|primary->secondary.enabled=true|secondary->primary.enabled=true|primary.security.protocol=PLAINTEXT|secondary.security.protocol=PLAINTEXT"
        STREAMS_REPLICATION_MANAGER_SERVICE:
          streams.replication.manager.service.target.cluster: "secondary"
        STREAMS_REPLICATION_MANAGER_DRIVER:
          streams.replication.manager.driver.target.cluster: "secondary"
      STREAMS_MESSAGING_MANAGER:
        STREAMS_MESSAGING_MANAGER_SERVER:
          streams.replication.manager.configure: true
          streams.replication.manager.host: "{{ hostvars[groups['secondary_broker_nodes'][0]].inventory_hostname }}"
      ZOOKEEPER:
        SERVICEWIDE:
          zookeeper_datadir_autocreate: true
    host_templates:
      Master21:
        CRUISE_CONTROL: [CRUISE_CONTROL_SERVER]
        SCHEMAREGISTRY: [SCHEMA_REGISTRY_SERVER]
        STREAMS_MESSAGING_MANAGER: [STREAMS_MESSAGING_MANAGER_UI, STREAMS_MESSAGING_MANAGER_SERVER]
      Broker21:
        KAFKA: [KAFKA_BROKER]
        SCHEMAREGISTRY: [GATEWAY]
        STREAMS_REPLICATION_MANAGER: [STREAMS_REPLICATION_MANAGER_DRIVER, STREAMS_REPLICATION_MANAGER_SERVICE]
        ZOOKEEPER: [SERVER]
      Broker22:
        KAFKA: [KAFKA_BROKER]
        SCHEMAREGISTRY: [GATEWAY]
        STREAMS_REPLICATION_MANAGER: [STREAMS_REPLICATION_MANAGER_DRIVER]
        ZOOKEEPER: [SERVER]
mgmt:
  name: Cloudera Management Service
  services: [ALERTPUBLISHER, EVENTSERVER, HOSTMONITOR, REPORTSMANAGER, SERVICEMONITOR]

hosts:
  configs:
    host_default_proc_memswap_thresholds:
      warning: never
      critical: never
    host_memswap_thresholds:
      warning: never
      critical: never
    host_config_suppression_agent_system_user_group_validator: true
